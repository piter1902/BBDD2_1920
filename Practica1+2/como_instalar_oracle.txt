########################
# Contraseña:BBDD_1920 #
########################

Manual para realizar la instalación de oracle XE 10g en la máquina Turnkey de 32 bits
-----------

Antes de empezar, se recomienda ejecutar el siguiente comando: 
apt-get install bc

Al realizarlo, puede aparecer algún problema, como: 
Failed to fetch http://cdn.debian.net/debian/pool/main/b/bc/bc_1.06.95-2_i386.deb  404  Not Found [IP: 151.101.132.204 80]

La terminal recomienda realizar apt-get update, pero al hacerlo vuelven a aparecer errores parecidos:
W: Failed to fetch http://cdn.debian.net/debian/dists/wheezy/main/binary-i386/Packages  404  Not Found [IP: 151.101.132.204 80]

Para solucionar estos errores se debe realizar lo siguiente: 

Se debe modificar el archivo sources.list (nano /etc/apt/sources.list.d/sources.list) para que quede de la siguiente manera:
deb http://archive.debian.org/debian/ wheezy main contrib non-free
deb-src http://archive.debian.org/debian/ wheezy main contrib non-free
deb http://archive.debian.org/debian-security/ wheezy/updates main contrib non-free

*Aviso: se recomienda realizar copia de seguridad antes de modificar con: 
cp -p /etc/apt/sources.list.d/sources.list{,.back}

Si al hacer "apt-get update" se obtiene un mensaje del tipo:

W: There is no public key available for the following key IDs:
7638D0442B90D010

se debe realizar: 
apt-get install debian-archive-keyring
apt-key update

Si al realizar "apt-get" se obtiene el siguiente mensaje:

E: Release file for http://archive.debian.org/debian-security/dists/wheezy/updates/InRelease is expired (invalid since 342d 1h 8min 23s). Updates for this repository will not be applied.

Se puede evitar añadiendo la opción "-o Acquire::Check-Valid-Until=false" al comando "apt-get".

A partir de ahora no debería aparecer ningún problema para utilziar "apt-get".
Como se ha mencionado anteriormente, previo a la instalación de oracle, se recomienda realizar: 
apt-get install bc
apt-get install libaio1
apt-get upgrade libaio
apt-get upgrade glibc

Al realizar "apt-get upgrade libaio", tras instalar varios paquetes, aparecerá una pantalla en la que se deberá elegir
la codificacón deseada. Se deberá elegir: es_ES-UTF.8

También aparecerán dos ventanas en las que se deberá elegir en ambas "mantener la versión actual"

A continuación, se debe instalar el paquete deb de oracle previamente descargado mediante:
dpkg --install oracle-xe_10.2.0.1-1.1_i386.deb

Aparecerá un error que indica que necesita más memoria de swap para completar la instalación.
Por ello, deberemos aumentar la partición de swap.

Primero, cerrar la máquina virtual para poder aumentar el tamaño del disco.
Se debe instalar el pack de extensión de virtualBox desde la página web de virtualBox
A continuación, desde una terminal en la máquina local, ejecutar el siguiente comando: 
VBoxManage modifyhd Turnkey32.vdi --resize 17408

Con esto hemos hecho que el disco de la máquina virtual ahora sea de 17 GB.

A continuación, procederemos a aumentar la partición de swap con la herramienta gparted.
Esta herramienta utiliza interfaz gráfica para trabajar, por lo que tendremos que introducirnos en la máquina virtual
utilizando la terminal mediante ssh con la opción -X:
ssh -X root@<DIR_IP_MV>

Seguidamente, ejecutamos "gparted". Desde la interfaz, seleccionamos linux-swap->SwapOff, para poder modificarlo.
Ahora, se vuelve a seleccionar linux-swap->Resize/Remove y se aumenta el swap a 2048. 

Una vez realizado lo anterior, se puede proceder a instalar oracle con: 
dpkg --install oracle-xe_10.2.0.1-1.1_i386.deb

Cuando se haya instalado, procedemos a configurar oracle:
/etc/init.d/oracle-xe configure

<<
Specify the HTTP port that will be used for Oracle Application Express [8080]: 8081
Specify a port that will be used for the database listener [1521]:
Password: <NEW_PASSWORD>
Do you want Oracle Database 11g Express Edition to be started on boot (y/n) [y]: n
>>

Despues, relizaremos cambios en los siguientes archivos:
nano /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh
Reemplazaremos:
<<
if [[ -n "$LC_ALL" ]]; then
    locale=$LC_ALL
elif [[ -n "$LANG" ]]; then
    locale=$LANG
else
    locale=
fi

por:

if [ -n "$LC_ALL" ]; then
    locale=$LC_ALL
elif [ -n "$LANG" ]; then
    locale=$LANG
else
    locale=
fi
>>

nano/etc/profile
Añadimos:
<<
. /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/oracle_env.sh
export PATH
>>

nano .bashrc
Reemplaazar:
<<
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
por:
PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
>>

Una vez instalado, para poder acceder a oracle se deben realizar los siguientes pasos:

Primero debemos iniciar el servidor oracle: 
/etc/init.d/oracle-xe enable
/etc/init.d/oracle-xe start

. /etc/profile

Conectarse como root: 
sqlplus sys/<NEW_PASSWORD> as sysdba
sqlplus sys as sysdba

Con esto, tendríamos el servidor Oracle listo para utilizar.
-----------------------
Enlaces de interés: 
- https://www.raulprietofernandez.net/blog/virtualizacion/como-redimensionar-un-disco-virtual-en-virtualbox
-----------------------

Descargamos los ficheros linux....

Creamos un un usuario 'oracle':
mkdir '/oracle'
groupadd dba
useradd -g dba -d dba -s /bin/bash oracle
passwd oracle # Introducimos su password

Copiamos los ficheros linux....zip al home de oracle
cp *.zip ~oracle

Copiamos los ficheros de configuracion de root
cp .profile ~oracle
cp .bashrc ~oracle
cp .Xauthority ~oracle # Esto es importante. Si algo no funciona, puede ser por esto

Les damos los permisos pertinentes
chown oracle:dba /oracle
chown oracle:dba *.zip
chown oracle:dba .*

Ahora descomprimimos los ficheros linux...zip
for file in $(linux*.zip); do unzip $file; done

Nos introducimos al directorio 'database' creado al descomprimir, y ejecutamos:

./runInstaller


-- PROBLEMAS --
Existen problemas con el espacio de la máquina. Al instalar todos los gestores no quedaba sitio suficiente para instalar oracle.
Para arreglar este problema se ha aumentado el espacio del disco proporcionado con la máquina a 32GB. Pero al intentar aumentar la particion (/dev/sda1)
que estaba montada en / hemos notado que existía una partición swap (/dev/sda5) que nos impedía redimensionar la primera.
Para intentar solucionar este problema se creó el nuevo espacio adicional como otra partición (/dev/sda3) y editando el fichero /etc/fstab se montó en el arranque
en el directorio /oracle, directorio home del usuario oracle (necesario para la instalacion del SGBD).
Esto solucionó el problema con el espacio, pero tras proseguir con la instalación nos encontramos con un apartado de comprobación de prerrequisitos. Aquí se comprueban
de manera automática que se cumplen ciertas precondiciones. Nuestra máquina no las cumplía y, el instalador propone como solución ejecutar un script ubicado en el directorio
/tmp. Al intentarlo ejecutar la terminal nos muestra ciertos errores de formateo:

./orarun.sh: 186: [: true: unexpected operator
./orarun.sh: 848: [: unexpected operator
./orarun.sh: 864: [: unexpected operator
./orarun.sh: 882: [: unexpected operator
./orarun.sh: 903: [: true: unexpected operator
./orarun.sh: 1052: [: unexpected operator
./orarun.sh: 1057: [: unexpected operator
./orarun.sh: 1075: [: unexpected operator
./orarun.sh: 1085: [: unexpected operator
./orarun.sh: 1115: [: unexpected operator
./orarun.sh: 1143: [: unexpected operator
./orarun.sh: 1189: [: unexpected operator
./orarun.sh: 139: [: unexpected operator
./orarun.sh: 139: [: unexpected operator
./orarun.sh: 1228: [: unexpected operator
./orarun.sh: 1284: [: unexpected operator
./orarun.sh: 1342: [: unexpected operator
./orarun.sh: 1426: [: unexpected operator
./orarun.sh: 1451: [: unexpected operator

Al inspeccionar el archivo orarun.sh no se encuentra ningún problema. Al buscar en Internet la única explicación que se encuentra es que estamos instalando
Oracle en una distro no certificada para ello.

Por ello procedemos a instalar Oracle en la máquina de 32 bits.

